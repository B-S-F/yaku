###
# Helm
###

bazel_dep(name = "rules_helm", version = "0.5.1")

###
# Go
###

bazel_dep(name = "gazelle", version = "0.37.0")
bazel_dep(name = "rules_go", version = "0.48.1")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.22.2")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//onyx:go.mod")
use_repo(go_deps, "com_github_azure_azure_sdk_for_go_sdk_azcore", "com_github_azure_azure_sdk_for_go_sdk_azidentity", "com_github_azure_azure_sdk_for_go_sdk_storage_azblob", "com_github_chigopher_pathlib", "com_github_invopop_jsonschema", "com_github_invopop_yaml", "com_github_netflix_go_iomux", "com_github_pkg_errors", "com_github_spf13_afero", "com_github_spf13_cobra", "com_github_spf13_viper", "com_github_stretchr_testify", "com_github_xeipuuv_gojsonschema", "in_gopkg_natefinch_lumberjack_v2", "in_gopkg_yaml_v3", "org_uber_go_zap")

###
# core image
###

bazel_dep(name = "aspect_bazel_lib", version = "2.8.0")
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "rules_pkg", version = "0.10.1")
bazel_dep(name = "container_structure_test", version = "1.15.0")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "distroless_base",
    digest = "sha256:ccaef5ee2f1850270d453fdf700a5392534f8d1a8ca2acda391fbb6a06b81c86",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)
use_repo(oci, "distroless_base", "distroless_base_linux_amd64", "distroless_base_linux_arm64")
