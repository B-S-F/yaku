// SPDX-FileCopyrightText: 2024 grow platform GmbH
//
// SPDX-License-Identifier: MIT

import { Authenticator } from '../auth/auth.js'
import { VulnerabilityDTO } from '../dto/vulnerability.dto.js'
import { VulnerabilityFixSummaryDTO } from '../dto/vulnerabilityFixSummary.dto.js'
import {
  getLibraryVulnerabilityDTOs,
  getVulnerabilityFixesDTOs,
} from '../fetcher/vulnerability.fetcher.js'
import { VulnerabilityMap } from '../mapper/vulnerability.mapper.js'
import { VulnerabilityFixSummaryMap } from '../mapper/vulnerabilityFixSummary.mapper.js'
import { MendEnvironment } from '../model/mendEnvironment.js'

export class VulnerabilityService {
  private auth: Authenticator
  private env: MendEnvironment

  constructor(env: MendEnvironment) {
    this.env = env
    this.auth = Authenticator.getInstance(env)
  }

  async getAllVulnerabilitiesById(libraryId: string, projectId: string) {
    const vulnerabilityDTOs: VulnerabilityDTO[] =
      await getLibraryVulnerabilityDTOs(
        this.env.apiUrl,
        { projectToken: projectId, libraryToken: libraryId, pageSize: 100 },
        this.auth,
      )
    const libraryVulnerabilities = vulnerabilityDTOs.map((vulnDTO) =>
      VulnerabilityMap.toModel(vulnDTO),
    )

    return libraryVulnerabilities
  }

  async getAllVulnerabilitiesFixSummaryById(vulnerabilityId: string) {
    const vulnerabilityFixSummaryDTOs: VulnerabilityFixSummaryDTO =
      await getVulnerabilityFixesDTOs(
        this.env.apiUrl,
        { vulnerabilityId: vulnerabilityId, pageSize: 100 },
        this.auth,
      )
    const vulnerabilitiesFixSummary = VulnerabilityFixSummaryMap.toModel(
      vulnerabilityFixSummaryDTOs,
    )

    return vulnerabilitiesFixSummary
  }
}
