import { VulnerabilityFixSummaryDTO } from '../dto/vulnerabilityFixSummary.dto.js'
import { VulnerabilityFixSummary } from '../model/vulnerabilityFixSummary.js'
import { VulnerabilityFix } from '../model/vulnerabilityFix.js'

export class VulnerabilityFixSummaryMap {
  public static toModel(
    vulnerabilityFixSummaryDTO: VulnerabilityFixSummaryDTO,
  ) {
    const vulnerabilityFix: VulnerabilityFix[] =
      vulnerabilityFixSummaryDTO.allFixes &&
      vulnerabilityFixSummaryDTO.allFixes.length > 0
        ? vulnerabilityFixSummaryDTO.allFixes.map(
            (fixes) =>
              new VulnerabilityFix(
                fixes.id,
                fixes.vulnerability,
                fixes.type,
                fixes.origin,
                fixes.url,
                fixes.fixResolution,
                fixes.date,
                fixes.message,
                fixes.extraData,
              ),
          )
        : []
    return new VulnerabilityFixSummary(
      vulnerabilityFixSummaryDTO.vulnerability,
      vulnerabilityFixSummaryDTO.topRankedFix as VulnerabilityFix,
      vulnerabilityFix,
      vulnerabilityFixSummaryDTO.totalUpVotes,
      vulnerabilityFixSummaryDTO.totalDownVotes,
    )
  }

  public static toDTO(vulnerabilityFixSummary: VulnerabilityFixSummary) {
    return new VulnerabilityFixSummaryDTO(
      vulnerabilityFixSummary.vulnerability,
      new VulnerabilityFix(
        vulnerabilityFixSummary.topRankedFix.id,
        vulnerabilityFixSummary.topRankedFix.vulnerability,
        vulnerabilityFixSummary.topRankedFix.type,
        vulnerabilityFixSummary.topRankedFix.origin,
        vulnerabilityFixSummary.topRankedFix.url,
        vulnerabilityFixSummary.topRankedFix.fixResolution,
        vulnerabilityFixSummary.topRankedFix.date,
        vulnerabilityFixSummary.topRankedFix.message,
        vulnerabilityFixSummary.topRankedFix.extraData,
      ),
      vulnerabilityFixSummary.allFixes.map((fixes) => {
        return {
          id: fixes.id,
          vulnerability: fixes.vulnerability,
          type: fixes.type,
          origin: fixes.origin,
          url: fixes.url,
          fixResolution: fixes.fixResolution,
          date: fixes.date,
          message: fixes.message,
          extraData: fixes.extraData,
        }
      }),
      vulnerabilityFixSummary.totalUpVotes,
      vulnerabilityFixSummary.totalDownVotes,
    )
  }
}
