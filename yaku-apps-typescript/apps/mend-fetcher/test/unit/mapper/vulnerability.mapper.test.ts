/**
 * Copyright (c) 2023 by grow platform GmbH
 */

import { describe, expect, it } from 'vitest'
import { Vulnerability } from '../../../src/model/vulnerability'
import { VulnerabilityDTO } from '../../../src/dto/vulnerability.dto'
import { VulnerabilityMap } from '../../../src/mapper/vulnerability.mapper'
import { vulnerabilitiesDTO } from '../fixtures/dto'
import { vulnerabilitiesModel } from '../fixtures/model'

describe('vulnerability.mapper', () => {
  it('should return a Vulnerability object when DTO has no references', () => {
    const expected = vulnerabilitiesModel[0]

    const result: Vulnerability = VulnerabilityMap.toModel(
      vulnerabilitiesDTO[0],
    )

    expect(result).toStrictEqual(expected)
  })

  it('should return a Vulnerability object when DTO includes references', () => {
    const expected = vulnerabilitiesModel[1]

    const result: Vulnerability = VulnerabilityMap.toModel(
      vulnerabilitiesDTO[1],
    )

    expect(result).toStrictEqual(expected)
  })

  it('should return a Vulnerability DTO when Model has no references', () => {
    const expected = vulnerabilitiesDTO[0]

    const result: VulnerabilityDTO = VulnerabilityMap.toDTO(
      vulnerabilitiesModel[0],
    )

    expect(result).toStrictEqual(expected)
  })

  it('should return a Vulnerability DTO when Model includes references', () => {
    const expected = vulnerabilitiesDTO[1]

    const result: VulnerabilityDTO = VulnerabilityMap.toDTO(
      vulnerabilitiesModel[1],
    )

    expect(result).toStrictEqual(expected)
  })
})
