metadata:
    version: v2
header:
    name: title
    version: 1.0.0
    date: ""
    toolVersion: ""
overallStatus: ERROR
statistics:
    counted-checks: 38
    counted-automated-checks: 32
    counted-manual-check: 6
    counted-unanswered-checks: 1
    counted-skipped-checks: 0
    degree-of-automation: 84.21
    degree-of-completion: 97.37
chapters:
    "1":
        status: GREEN
        requirements:
            "1":
                title: v2 should support the new autopilot interface
                text: The new autopilot interface should be supported
                status: GREEN
                checks:
                    "1":
                        title: Check if the new autopilot interface is supported
                        type: automation
                        autopilots:
                            - name: fully-fledged-v2
                              steps:
                                - title: fetch1
                                  id: fetch1
                                  depends: []
                                  logs:
                                    - '{"source":"stdout","text":"1_1_1"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/fetch1/files"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/fetch1/data.json"}'
                                  configFiles: []
                                  outputDir: evidences/1_1_1/steps/fetch1/files
                                  resultFile: ""
                                  inputDirs: []
                                  exitCode: 0
                                - title: fetch2
                                  id: fetch2
                                  depends:
                                    - fetch1
                                  logs:
                                    - '{"source":"stdout","text":"1_1_1"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/fetch2/files"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/fetch2/data.json"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/fetch1/files"}'
                                  configFiles: []
                                  outputDir: evidences/1_1_1/steps/fetch2/files
                                  resultFile: ""
                                  inputDirs:
                                    - evidences/1_1_1/steps/fetch1/files
                                  exitCode: 0
                                - title: transform1
                                  id: transform1
                                  depends:
                                    - fetch2
                                  logs:
                                    - '{"source":"stdout","text":"1_1_1"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/transform1/files"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/transform1/data.json"}'
                                    - '{"source":"stdout","text":"fetch2.txt"}'
                                  configFiles: []
                                  outputDir: evidences/1_1_1/steps/transform1/files
                                  resultFile: evidences/1_1_1/steps/transform1/data.json
                                  inputDirs:
                                    - evidences/1_1_1/steps/fetch2/files
                                  exitCode: 0
                                - title: transform2
                                  id: transform2
                                  depends:
                                    - fetch1
                                    - fetch2
                                  logs:
                                    - '{"source":"stdout","text":"1_1_1"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/transform2/files"}'
                                    - '{"source":"stdout","text":"evidences/1_1_1/steps/transform2/data.json"}'
                                    - '{"source":"stdout","text":"Removing '' from evidences/1_1_1/steps/fetch1/files'' to sanitize for ls"}'
                                    - '{"source":"stdout","text":"Reading from evidences/1_1_1/steps/fetch1/files"}'
                                    - '{"source":"stdout","text":"fetch1.txt"}'
                                    - '{"source":"stdout","text":"Removing '' from ''evidences/1_1_1/steps/fetch2/files to sanitize for ls"}'
                                    - '{"source":"stdout","text":"Reading from evidences/1_1_1/steps/fetch2/files"}'
                                    - '{"source":"stdout","text":"fetch2.txt"}'
                                  configFiles: []
                                  outputDir: evidences/1_1_1/steps/transform2/files
                                  resultFile: evidences/1_1_1/steps/transform2/data.json
                                  inputDirs:
                                    - evidences/1_1_1/steps/fetch1/files
                                    - evidences/1_1_1/steps/fetch2/files
                                  exitCode: 0
                        evaluation:
                            status: GREEN
                            reason: This is a reason
                            results:
                                - hash: f68d82660400fc15fdd64a7e60fee5a9ab40effbe7d177c50039d8442a438c8c
                                  criterion: I am a criterion
                                  fulfilled: false
                                  justification: I am the justification
                            logs:
                                - '{"source":"stdout","text":"evidences/1_1_1/steps/transform1/data.json'':''evidences/1_1_1/steps/transform2/data.json"}'
                                - '{"source":"stdout","text":"evidences/1_1_1/evaluation/result.json"}'
                                - '{"source":"stdout","text":"Removing '' from evidences/1_1_1/steps/transform1/data.json'' to sanitize for cat"}'
                                - '{"source":"stdout","text":"Reading from evidences/1_1_1/steps/transform1/data.json"}'
                                - '{"source":"stdout","text":"result2"}'
                                - '{"source":"stdout","text":"Removing '' from ''evidences/1_1_1/steps/transform2/data.json to sanitize for cat"}'
                                - '{"source":"stdout","text":"Reading from evidences/1_1_1/steps/transform2/data.json"}'
                                - '{"source":"stdout","text":"result2"}'
                                - '{"source":"stdout","json":{"status":"GREEN"}}'
                                - '{"source":"stdout","json":{"reason":"This is a reason"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion","fulfilled":false,"justification":"I am the justification"}}}'
                            configFiles:
                                - additional-config.yaml
    "2":
        title: Manual Answers
        status: RED
        requirements:
            "1":
                title: GREEN answer
                status: GREEN
                checks:
                    "1":
                        title: GREEN answer check
                        type: manual
                        evaluation:
                            status: GREEN
                            reason: It should be GREEN
            "2":
                title: YELLOW answer
                status: YELLOW
                checks:
                    "1":
                        title: YELLOW answer check
                        type: manual
                        evaluation:
                            status: YELLOW
                            reason: It should be YELLOW
            "3":
                title: RED answer
                status: RED
                checks:
                    "1":
                        title: RED answer check
                        type: manual
                        evaluation:
                            status: RED
                            reason: It should be RED
            "4":
                title: NA answer
                status: NA
                checks:
                    "1":
                        title: NA answer check
                        type: manual
                        evaluation:
                            status: NA
                            reason: It should be NA
            "5":
                title: UNANSWERED answer
                status: UNANSWERED
                checks:
                    "1":
                        title: UNANSWERED answer check
                        type: manual
                        evaluation:
                            status: UNANSWERED
                            reason: It should be UNANSWERED
    "3":
        title: Base Interface
        status: ERROR
        requirements:
            "1":
                title: Base Interface has to be supported
                text: |
                    The base interface should be supported to retrieve the status from an autopilot
                    The base interface consists of the following properties:
                    - status
                    - reason
                status: ERROR
                checks:
                    1a:
                        title: Status GREEN should be supported
                        type: automation
                        autopilots:
                            - name: status-provider
                              steps: []
                        evaluation:
                            status: GREEN
                            reason: Some reason
                            results:
                                - hash: 6cd07f489428ea6310abf447520102f4bfaabeff04388ac6d99353b5b2b81c26
                                  criterion: I am a criterion
                                  fulfilled: false
                                  justification: I am the justification
                            logs:
                                - '{"source":"stdout","json":{"status":"GREEN"}}'
                                - '{"source":"stdout","json":{"reason":"Some reason"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion","fulfilled":false,"justification":"I am the justification"}}}'
                    1b:
                        title: Status YELLOW should be supported
                        type: automation
                        autopilots:
                            - name: status-provider
                              steps: []
                        evaluation:
                            status: YELLOW
                            reason: Some reason
                            results:
                                - hash: 54b5b05f4b4f0e0569560c2c3e56489c7a0db808cad858f5a6bf32221171f092
                                  criterion: I am a criterion
                                  fulfilled: false
                                  justification: I am the justification
                            logs:
                                - '{"source":"stdout","json":{"status":"YELLOW"}}'
                                - '{"source":"stdout","json":{"reason":"Some reason"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion","fulfilled":false,"justification":"I am the justification"}}}'
                    1c:
                        title: Status RED should be supported
                        type: automation
                        autopilots:
                            - name: status-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: Some reason
                            results:
                                - hash: f1357057327bf9a408cd9f1de916e87a1071a393f56c21de8037e7f918276cb6
                                  criterion: I am a criterion
                                  fulfilled: false
                                  justification: I am the justification
                            logs:
                                - '{"source":"stdout","json":{"status":"RED"}}'
                                - '{"source":"stdout","json":{"reason":"Some reason"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion","fulfilled":false,"justification":"I am the justification"}}}'
                    1d:
                        title: If a status is not supported, it should be set to ERROR
                        type: automation
                        autopilots:
                            - name: status-provider
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''status-provider'' provided an invalid ''status'': ''UNKNOWN'''
                            results:
                                - hash: 5d56c0842cdd4700c8e2de80154a3da9a0ecf3cb7c5b36c2433af6a0b71eb17a
                                  criterion: I am a criterion
                                  fulfilled: false
                                  justification: I am the justification
                            logs:
                                - '{"source":"stdout","json":{"status":"UNKNOWN"}}'
                                - '{"source":"stdout","json":{"reason":"Some reason"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion","fulfilled":false,"justification":"I am the justification"}}}'
                    1e:
                        title: If a status is empty, it should be set to ERROR
                        type: automation
                        autopilots:
                            - name: status-provider
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''status-provider'' provided an invalid ''status'': '''''
                            results:
                                - hash: e34c4ba0df60f5c24dd705626a99b65cd78d800f1d058fd39144a0b64c471b06
                                  criterion: I am a criterion
                                  fulfilled: false
                                  justification: I am the justification
                            logs:
                                - '{"source":"stdout","json":{"status":""}}'
                                - '{"source":"stdout","json":{"reason":"Some reason"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion","fulfilled":false,"justification":"I am the justification"}}}'
                    "3":
                        title: Reason should be supported
                        type: automation
                        autopilots:
                            - name: reason-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: This is a reason
                            logs:
                                - '{"source":"stdout","json":{"reason":"This is a reason"}}'
                                - '{"source":"stdout","json":{"status":"RED"}}'
                    "6":
                        title: Findings should be supported
                        type: automation
                        autopilots:
                            - name: findings-interface
                              steps: []
                        evaluation:
                            status: GREEN
                            reason: This is a reason
                            results:
                                - hash: 80c747e328ef8057a6edae59e9623d20477c8f461d417bdeb8cc40b2c7159d57
                                  criterion: I am a criterion
                                  fulfilled: false
                                  justification: I am the reason
                                - hash: 69da4b57a997033bedc707c613a594e08fca6002c79fe88423750227145da901
                                  criterion: I am a criterion 2
                                  fulfilled: false
                                  justification: I am another reason
                                - hash: 2f391bf70bd76a26aee380152d91fb0954ea6fe8005c7d7c7d2a8f84a7dac4aa
                                  criterion: I am a criterion 3
                                  fulfilled: false
                                  justification: I am yet another reason
                                  metadata:
                                    severity: "I am a severity"
                                    customer: "I am customer in metadata"
                                    package: "I am a package"
                            logs:
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion","fulfilled":false,"justification":"I am the reason"}}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion 2","fulfilled":false,"justification":"I am another reason"}}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"I am a criterion 3","fulfilled":false,"justification":"I am yet another reason","metadata":{"customer":"I am customer in metadata","package":"I am a package","severity":"I am a severity"}}}}'
                                - '{"source":"stdout","json":{"reason":"This is a reason","status":"GREEN"}}'
                    "7":
                        title: Can provide handle escape characters in a string
                        type: automation
                        autopilots:
                            - name: escape-characters-autopilot
                              steps: []
                        evaluation:
                            status: RED
                            reason: ""
                            results:
                                - hash: 44a98ada74924c6239f0d6696e80e9a1d5e1e618711a4cf1df91b2d65eea205f
                                  criterion: "criterion is \b \f \n \r \t \n \\ \" \\n"
                                  fulfilled: true
                                  justification: "reason is \b \f \n \r \t \n \\ \" \\n"
                            logs:
                                - '{"source":"stdout","json":{"result":{"criterion":"criterion is \b \f \n \r \t \n \\ \" \\n","fulfilled":true,"justification":"reason is \b \f \n \r \t \n \\ \" \\n"}}}'
                                - '{"source":"stdout","json":{"status":"RED"}}'
                    "8":
                        title: Can provide handle new line characters in a string
                        type: automation
                        autopilots:
                            - name: new-line-autopilot
                              steps: []
                        evaluation:
                            status: GREEN
                            reason: |-
                                reas
                                on
                            results:
                                - hash: ccbfa89b5f6ff9ef52b44e3921c91b0f83b2129a7cf58d6c988f6c128b8bbe0c
                                  criterion: |-
                                    crit
                                    erion
                                  fulfilled: true
                                  justification: |-
                                    reas
                                    on
                                  metadata:
                                    "cust\tomer": "cust\nomer metadata"
                            logs:
                                - '{"source":"stdout","json":{"status":"GREEN"}}'
                                - '{"source":"stdout","json":{"reason":"reas\non"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"crit\nerion","fulfilled":true,"justification":"reas\non","metadata":{"cust\tomer":"cust\nomer metadata"}}}}'
                    "9":
                        title: Can provide handle problematic yaml multilines
                        type: automation
                        autopilots:
                            - name: problematic-yaml-multilines-autopilot
                              steps: []
                        evaluation:
                            status: GREEN
                            reason: reason
                            results:
                                - hash: 6d74470ef4ae78a5e786c910b817915594e598003cfade40c7b18a4c765d72a3
                                  criterion: criterion
                                  fulfilled: true
                                  justification: |-
                                    line1
                                     line2
                                    line3
                            logs:
                                - '{"source":"stdout","json":{"status":"GREEN"}}'
                                - '{"source":"stdout","json":{"reason":"reason"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"criterion","fulfilled":true,"justification":"  line1\n line2\nline3"}}}'
    "4":
        title: Parameter Replacement
        status: ERROR
        requirements:
            "1":
                title: Should replace parameters in autopilots
                status: RED
                checks:
                    "1":
                        title: Replace environments
                        type: automation
                        autopilots:
                            - name: env-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: This is a reason
                            logs:
                                - '{"source":"stdout","text":"global-env-1"}'
                                - '{"source":"stdout","text":"global-env-1"}'
                                - '{"source":"stdout","text":"global-env-2"}'
                                - '{"source":"stdout","text":"autopilot-ref-env-2"}'
                                - '{"source":"stdout","text":"autopilot-env-3"}'
                                - '{"source":"stdout","text":"autopilot-env-3"}'
                                - '{"source":"stdout","json":{"reason":"This is a reason","status":"RED"}}'
                    "2":
                        title: Replace secrets
                        type: automation
                        autopilots:
                            - name: secrets-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: This is a reason
                            logs:
                                - '{"source":"stdout","text":"***SECRET_2***"}'
                                - '{"source":"stdout","text":"***SECRET_3***"}'
                                - '{"source":"stdout","json":{"reason":"This is a reason","status":"RED"}}'
                    "3":
                        title: Replace variables
                        type: automation
                        autopilots:
                            - name: vars-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: This is a reason
                            logs:
                                - '{"source":"stdout","text":"var 2"}'
                                - '{"source":"stdout","text":"var 3"}'
                                - '{"source":"stdout","text":"new line"}'
                                - '{"source":"stdout","text":"some value"}'
                                - '{"source":"stdout","json":{"reason":"This is a reason","status":"RED"}}'
                            configFiles:
                                - ${{ env.MY_CONFIG }}
            "2":
                title: Should replace parameters in manual answers like here
                text: |
                    This is a
                    requirement text
                status: GREEN
                checks:
                    "1":
                        title: check for var replacement in manual answer
                        type: manual
                        evaluation:
                            status: GREEN
                            reason: manual reason
            "3":
                title: Should replace parameters in additional config
                status: ERROR
                checks:
                    "1":
                        title: Replace parameters in additional config
                        type: automation
                        autopilots:
                            - name: additional-config-provider
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: autopilot 'additional-config-provider' exited with exit code 1
                            logs:
                                - '{"source":"stdout","json":{"reason":"This is a reason","status":"RED"}}'
                                - '{"source":"stdout","text":"This autopilot has an additional config"}'
                                - '{"source":"stderr","text":"cat: /additional-config.yaml: No such file or directory"}'
                            configFiles:
                                - additional-config.yaml
                            exitCode: 1
            "4":
                title: Shoould use check environment variables in check title and config keys
                status: RED
                checks:
                    "1":
                        title: 'Check pdf '
                        type: automation
                        autopilots:
                            - name: vars-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: This is a reason
                            logs:
                                - '{"source":"stdout","text":"var 2"}'
                                - '{"source":"stdout","text":"var 3"}'
                                - '{"source":"stdout","text":"new line"}'
                                - '{"source":"stdout","text":"some value"}'
                                - '{"source":"stdout","json":{"reason":"This is a reason","status":"RED"}}'
                            configFiles:
                                - config1.yaml
    "5":
        title: Should run checks in parallel
        status: ERROR
        requirements:
            "1":
                title: Should run checks in parallel
                text: |
                    Checks should be run in parallel and finish in less than the aggregated time of all checks
                status: ERROR
                checks:
                    1a:
                        title: Check 1
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1b:
                        title: Check 2
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1c:
                        title: Check 3
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1d:
                        title: Check 4
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1e:
                        title: Check 5
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1f:
                        title: Check 6
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1g:
                        title: Check 7
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1h:
                        title: Check 8
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1i:
                        title: Check 9
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
                    1j:
                        title: Check 10
                        type: automation
                        autopilots:
                            - name: sleep-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''sleep-autopilot'' provided an invalid ''status'': '''''
    "6":
        title: Should hide secrets
        status: RED
        requirements:
            "1":
                title: Hide secrets in logs
                status: RED
                checks:
                    1a:
                        title: Check 1
                        type: automation
                        autopilots:
                            - name: secrets-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: This is a reason
                            logs:
                                - '{"source":"stdout","text":"***SECRET_2***"}'
                                - '{"source":"stdout","text":"***SECRET_3***"}'
                                - '{"source":"stdout","json":{"reason":"This is a reason","status":"RED"}}'
    "7":
        title: Should use timeout
        status: ERROR
        requirements:
            "1":
                title: Timeout after 3 seconds
                status: ERROR
                checks:
                    "1":
                        title: Check 1
                        type: automation
                        autopilots:
                            - name: timeout-autopilot
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: autopilot 'timeout-autopilot' timed out after 3s
                            logs:
                                - '{"source":"stdout","text":"Hello 1!"}'
                                - '{"source":"stdout","text":"Hello 2!"}'
                                - '{"source":"stdout","text":"Hello 3!"}'
                                - '{"source":"stderr","text":"Command timed out after 3s"}'
                            exitCode: 124
    "8":
        title: File consistency
        status: ERROR
        requirements:
            "1":
                title: Should not allow to overwrite linked files
                status: ERROR
                checks:
                    "1":
                        title: Try to overwrite linked file
                        type: automation
                        autopilots:
                            - name: write-data-to-file
                              steps: []
                        evaluation:
                            status: ERROR
                            reason: 'autopilot ''write-data-to-file'' provided an invalid ''status'': '''''
                            logs:
                                - '{"source":"stdout","text":"symlink.txt"}'
    "9":
        title: Repositories and Apps
        status: GREEN
        requirements:
            "1":
                title: Should be able to run apps from a repository
                status: GREEN
                checks:
                    "1":
                        title: App can be specified with repository and version
                        type: automation
                        autopilots:
                            - name: repository-app-provider
                              steps: []
                        evaluation:
                            status: GREEN
                            reason: Repository apps was fetched
                            results:
                                - hash: 709876674ac30045358a9533393fd333fe6cb0aeb31f72b08c95cdb67ac4633c
                                  criterion: Repository apps can be fetched
                                  fulfilled: true
                                  justification: This app is a repository app
                            logs:
                                - '{"source":"stdout","json":{"status":"GREEN"}}'
                                - '{"source":"stdout","json":{"reason":"Repository apps was fetched"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"Repository apps can be fetched","fulfilled":true,"justification":"This app is a repository app"}}}'
                    "2":
                        title: App can be specified without repository
                        type: automation
                        autopilots:
                            - name: app-provider
                              steps: []
                        evaluation:
                            status: GREEN
                            reason: Repository apps was fetched
                            results:
                                - hash: 5c4e98d57c22f8217688c53c222e29b65991a1206ec549f7f2b240e453091ab0
                                  criterion: Repository apps can be fetched
                                  fulfilled: true
                                  justification: This app is a repository app
                            logs:
                                - '{"source":"stdout","json":{"status":"GREEN"}}'
                                - '{"source":"stdout","json":{"reason":"Repository apps was fetched"}}'
                                - '{"source":"stdout","json":{"result":{"criterion":"Repository apps can be fetched","fulfilled":true,"justification":"This app is a repository app"}}}'
    "10":
        title: Special Outputs
        status: RED
        requirements:
            "1":
                title: Should be able to handle special outputs
                status: RED
                checks:
                    "1":
                        title: Special output with metadata
                        type: automation
                        autopilots:
                            - name: special-output-provider
                              steps: []
                        evaluation:
                            status: RED
                            reason: test
                            results:
                                - hash: 95774b4ca2f998885b0847ee7cdf3146aa82293a7ef49e032131dd68fe57463d
                                  criterion: FFixed RTC ticket with ID 1588653 must be risk assessed
                                  fulfilled: false
                                  justification: Please type the appropriate risk assessment for RTC Ticket with ID 1588653.
                                  metadata:
                                    Summary: "[main] after EDLminidump SoC bootup stuck"
                            logs:
                                - '{"source":"stdout","json":{"result":{"criterion":"FFixed RTC ticket with ID 1588653 must be risk assessed","fulfilled":false,"justification":"Please type the appropriate risk assessment for RTC Ticket with ID 1588653.","metadata":{"Summary":"[main] after EDLminidump SoC bootup stuck"}}}}'
                                - '{"source":"stdout","json":{"reason":"test","status":"RED"}}'
finalize:
    logs:
        - '{"source":"stdout","text":"global-env-1"}'
        - '{"source":"stdout","text":"global-env-1"}'
        - '{"source":"stdout","text":"***SECRET_1***"}'
        - '{"source":"stdout","text":"***SECRET_1***"}'
        - '{"source":"stdout","text":"var 1"}'
        - '{"source":"stdout","text":"var 1"}'
        - '{"source":"stdout","text":"qg-result.yaml exists"}'
        - '{"source":"stdout","text":"This finalizer has an additional config"}'
        - '{"source":"stdout","text":"env: finalizer-ref-additional-config-env"}'
        - '{"source":"stdout","text":"var: additional config var"}'
        - '{"source":"stdout","text":"secret: ${{ secrets.ADDITIONAL_CONFIG_SECRET }}"}'
    configFiles:
        - additional-config.yaml
    exitCode: 0
