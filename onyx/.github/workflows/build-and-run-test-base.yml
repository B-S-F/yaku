name: Building and running tests

on:
  workflow_call:

env:
  MIN_COVERAGE: 50
  MAX_COVERAGE: 80

jobs:
  build-and-test:
    permissions:
      pull-requests: write
      contents: read

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.20.0"

      - name: Setup project
        run: make setup

      - name: Run linters
        run: make lint
        continue-on-error: true

      - name: Run tests
        run: make test

      - name: Run tests with coverage
        run: make test-coverage

      - name: Private actions checkout
        uses: daspn/private-actions-checkout@v2
        with:
          actions_list: '["B-S-F/github-actions@main"]'
          checkout_base_path: ./.github/actions
          app_id: 1007791
          app_private_key: ${{ secrets.ACCESS_ACTIONS_REPO_APP_PRIVATEKEY }}

      - name: Create Code Coverage Summary
        id: coverage-summary
        uses: ./.github/actions/github-actions/json-code-coverage-summary
        if: github.actor != 'depbot'
        with:
          filenames: ./coverage/coverage.json
          threshold: ${{ env.MIN_COVERAGE }},${{ env.MAX_COVERAGE }}
          kind: go
          show-details: true
          mono-repo: false

      - name: Add Coverage as PR Comment
        if: github.event_name == 'pull_request' && github.actor != 'depbot'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: code-coverage-results.md

      - name: Upload Coverage Badge data
        if: github.event_name == 'push' && github.actor != 'depbot'
        run: |
          percentage=${{ steps.coverage-summary.outputs.total-coverage }}
          if [ $percentage -ge "${{ env.MAX_COVERAGE }}"  ]; then
            color="green"
          elif [ $percentage -ge "${{ env.MIN_COVERAGE }}" ]; then
            color="yellow"
          else
            color="red"
          fi
          jq -n --arg color "$color" --arg percentage "$percentage%" '{"schemaVersion": 1, "label": "Coverage", "message": $percentage, "color": $color}' > onyx-coverage-badge.json
          gh gist edit ${{ env.COVERAGE_BADGE_GIST_ID }} -a onyx-coverage-badge.json
        env:
          COVERAGE_BADGE_GIST_ID: 819f17e6f8166534e73c8acf9ee58726
          GITHUB_TOKEN: ${{ secrets.COVERAGE_BADGE_GIST_TOKEN }}